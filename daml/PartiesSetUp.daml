module PartiesSetUp where

import Daml.Script
import Employees


data TestParties = TestParties with
    applicant: Party
    oldEmployee_1: Party
    oldEmployee_2: Party
    employer: Party


-- Preparees 4 parties for testing saving them in TestParties
setupParties: Script TestParties
setupParties = do

    applicant <- allocatePartyWithHint "Alice" (PartyIdHint "applicant")
    oldEmployee_1 <- allocatePartyWithHint "Bob" (PartyIdHint "old employee 1")
    oldEmployee_2 <- allocatePartyWithHint "Henry" (PartyIdHint "old employee 2")
    employer <- allocatePartyWithHint "Boss" (PartyIdHint "employer")

    return TestParties with
        ..


-- Creates an employee account for an employee
setupEmployeeAccount_1: Party-> Party -> Script EmployeeAccountId
setupEmployeeAccount_1 employee employer = do

   submit employer do
        createCmd EmployeeAccount with
            employee = employee
            employer = employer
            applicantInformation = PersonalInformation with
                name = "Bob"
                lastName = "Anderson"
                education = "Master"
            salary = 80.0
            vacationDays = 10
            onVacation = False
            requestedVacationTime = False


-- creates an employee account for a second employee
setupEmployeeAccount_2: Party-> Party -> Script EmployeeAccountId
setupEmployeeAccount_2 employee employer = do

   submit employer do
        createCmd EmployeeAccount with
            employee = employee
            employer = employer
            applicantInformation = PersonalInformation with
                name = "Bruce"
                lastName = "Wayne"
                education = "Bachelor"
            salary = 60.0
            vacationDays = 10
            onVacation = False
            requestedVacationTime = False


-- creates an application for a test applicant
setupApplication: Party -> Party -> Script ApplicationId
setupApplication applicant employer = do

    submit applicant do
        createCmd NewEmployeeApplication with
            newApplicant = applicant
            employer = employer
            positionName = "SWE"
            salary = 0.0
            applicantInformation = PersonalInformation with
                name = "Alice"
                lastName = "Smith"
                education = "Master"
            acceptedOfferApplicant = False


-- loads the service template for the employer.
setupEmployerServices: Party -> Script (ContractId EmployerServices)
setupEmployerServices employer = do
    submit employer do
        createCmd EmployerServices with
            employer = employer