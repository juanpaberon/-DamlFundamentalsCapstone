module Test where

import Daml.Script
import Employees
import PartiesSetUp


--Test negotiation of salary between an applicant and the employer.
test_setSalary: Script ()
test_setSalary = script do

    testParties@TestParties{applicant, oldEmployee, employer} <- setupParties
    application <- setupApplication applicant employer
    oldEmployeeAccount <- setupEmployeeAccount oldEmployee employer

    application <- submit employer do
        exerciseCmd application MakeAnOffer with salary=100.0

    application <- submit applicant do
        exerciseCmd application CounterOfferApplicant with salary=120.00

    application <- submit employer do
        exerciseCmd application MakeAnOffer with salary=110.0

    application <- submit applicant do
        exerciseCmd application AcceptOfferApplicant

    employeeAccount <- submit employer do
        exerciseCmd application ReviewApplication

    return ()

-- test request for vacation by employee
test_resquestVacation: Script ()
test_resquestVacation = script do

    testParties@TestParties{applicant, oldEmployee, employer} <- setupParties
    application <- setupApplication applicant employer
    oldEmployeeAccount <- setupEmployeeAccount oldEmployee employer

    oldEmployeeAccount <- submit oldEmployee do
        exerciseCmd oldEmployeeAccount RequestVacation

    oldEmployeeAccount <- submit employer do
        exerciseCmd oldEmployeeAccount ReviewVacationRequest

    return ()


-- test firing an employee
test_multipleEmployees: Script ()
test_multipleEmployees = script do

    testParties@TestParties{applicant, oldEmployee, employer} <- setupParties
    application <- setupApplication applicant employer
    oldEmployeeAccount <- setupEmployeeAccount oldEmployee employer

    services <- submit employer do
        createCmd EmployerServices with
            employer = employer

    submit employer do 
        exerciseCmd services FireEmployee with employee=oldEmployee

    return ()